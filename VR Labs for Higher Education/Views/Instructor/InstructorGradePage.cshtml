@using MongoDB.Bson

@{
    Layout = "_Layout";
    ViewData["Title"] = "Instructor Grade Page";
    var labId = ViewData["LabId"] as string;
    var studentsWithCompletedLabs = ViewData["StudentsWithCompletedLabs"] as List<BsonDocument>;
}

<div class="text-center">
    <p>Select a student to grade for @labId.</p>
    <div class="row">
        @foreach (var student in studentsWithCompletedLabs)
        {
            var labProgressArray = student["labProgress"].AsBsonArray;
            var currentGrade = double.NaN; // Default to NaN

            // Check if there is any lab progress data and if it contains a "grade" field
            if (labProgressArray.Any() && labProgressArray[0].AsBsonDocument.Contains("grade"))
            {
                var gradeValue = labProgressArray[0]["grade"];
                if (!gradeValue.IsBsonNull)
                {
                    currentGrade = gradeValue.ToDouble(); // Convert to double if not null
                }
            }

            var studentId = student["_id"].ToString();

            <div class="col-md-4">
                <div class="student-tile">
                    <h3>@student["name"]</h3>
                    <p>Lab ID: @labId</p>
                    <p>Current Grade: @(double.IsNaN(currentGrade) ? "Not Graded" : currentGrade.ToString())</p>
                    <form method="post" action="/Instructor/UpdateGrade">
                        <input type="hidden" name="studentId" value="@studentId" />
                        <input type="hidden" name="labId" value="@labId" />
                        <label for="grade">New Grade:</label>
                        <input type="number" id="grade" name="grade" step="0.01" />
                        <button type="submit">Update Grade</button>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/student-home.js"></script>
}